import React, { useState } from 'react'
import styles from '@/styles/Login.module.css'
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'

import { v4 as uuidv4 } from 'uuid'
import { account, databases } from '@/appwrite/appwriteConfig'

import getConfig from 'next/config';

import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

import { FcGoogle } from 'react-icons/fc'
import { AiFillGithub } from "react-icons/ai";
import { FaTwitter, FaFacebookSquare } from "react-icons/fa"
import { useRouter } from 'next/router'

export default function signUp() {
    const [name, setName] = useState('')
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const router = useRouter()
    const { publicRuntimeConfig } = getConfig();

    function handleInputChange(event) {
        const eventFrom = event.target.id

        if (eventFrom === "name") {
            setName(event.target.value)
        } else if (eventFrom === "email") {
            setEmail(event.target.value)
        } else if (eventFrom === "password") {
            setPassword(event.target.value)
        }
    }

    async function submitForm(e) {
        e.preventDefault();
        try {
            await toast.promise(
                () => registerUser(),
                {
                    pending: 'Registering User',
                    success: 'Registed User Sucessfully ðŸ‘Œ',
                    error: 'Operation Failed ðŸ¤¯',
                }
            );
        } catch (error) {
            console.error("An error occurred:", error);
            toast.error(String(error));
        }
    }

    async function registerUser() {
        const uuid = uuidv4()
        try {
            const response = await account.create(uuid, email, password, name);
            await addToDataBase(uuid)
            router.push("/")
            if (response.err) {
                throw new Error(response.err);
            }
        } catch (error) {
            throw error;
        }
    }

    async function addToDataBase(uuid) {
        try {
            const response = await databases.createDocument(publicRuntimeConfig.APPWRITE_DATABASE_ID, publicRuntimeConfig.APPWRITE_COLLECTION_ID, uuid, {
                Name: name,
                isBioDataFilled: false,
                Email: email
            })
            console.log(response)
        } catch (err) {
            throw (err)
        }
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <main className={styles.loginContainer}>
                    <div className={styles.loginForm}>
                        <Image src={"/logo.png"} alt={"logo"} width={80} height={80} />
                        <h1>Welcome To Sensory-Cademy</h1>
                        <p>Login Via Email Or Social Handles</p>
                        <form onSubmit={submitForm} className={styles.formInput}>
                            <div className={styles.socialHandles}>
                                <button><FcGoogle /></button>
                                <button><Image src={"/linkedin.svg"} alt='linkedin logo' className={styles.linkedin} width={22} height={22} /></button>
                                <button><AiFillGithub /></button>
                                <button><FaTwitter className={styles.twitter} /></button>
                                <button><FaFacebookSquare className={styles.facebook} /></button>
                            </div>
                            <div className={styles.divider}>OR</div> {/* Divider with text */}
                            <input
                                type="text"
                                placeholder="Enter Your Name"
                                value={name}
                                id='name'
                                required
                                autoComplete="off"
                                onChange={handleInputChange}
                            />
                            <input
                                type="email"
                                placeholder="Enter Your Email"
                                value={email}
                                autoComplete="off"
                                required
                                id='email'
                                onChange={handleInputChange}
                            />
                            <input
                                type="password"
                                autoComplete="off"
                                required
                                id='password'
                                placeholder="Enter Your Password"
                                value={password}
                                onChange={handleInputChange}
                            />
                            <button className={styles.submit} type="submit">Sign Up</button>
                            <p>Already have an account ?? <Link href='/'>Log In</Link></p>
                        </form>
                    </div>
                    <ToastContainer
                        position="bottom-center"
                        autoClose={5000}
                        hideProgressBar={false}
                        newestOnTop={false}
                        closeOnClick
                        rtl={false}
                        pauseOnFocusLoss
                        draggable
                        pauseOnHover
                        theme="dark"
                    />
                </main>
            </main>
        </>
    )
}
